// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteAcesso.Repository.Infrastructure;

namespace TesteAcesso.Repository.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("TesteAcesso.Model.Entity.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("TesteAcesso.Model.Entity.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(38)");

                    b.Property<string>("AccountDestination")
                        .IsRequired();

                    b.Property<string>("AccountOrigin")
                        .IsRequired();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Message");

                    b.Property<int>("StatusId");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10,6)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("TesteAcesso.Model.Entity.Transaction", b =>
                {
                    b.HasOne("TesteAcesso.Model.Entity.Status", "Status")
                        .WithMany("Transfers")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
